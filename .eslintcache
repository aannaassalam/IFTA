[{"C:\\Users\\Asus\\Documents\\IKick Talent\\IFTA\\src\\index.js":"1","C:\\Users\\Asus\\Documents\\IKick Talent\\IFTA\\src\\reportWebVitals.js":"2","C:\\Users\\Asus\\Documents\\IKick Talent\\IFTA\\src\\StateProvider.js":"3","C:\\Users\\Asus\\Documents\\IKick Talent\\IFTA\\src\\App.js":"4","C:\\Users\\Asus\\Documents\\IKick Talent\\IFTA\\src\\Reducer.js":"5","C:\\Users\\Asus\\Documents\\IKick Talent\\IFTA\\src\\Particle.js":"6","C:\\Users\\Asus\\Documents\\IKick Talent\\IFTA\\src\\components\\Voting\\Voting.js":"7","C:\\Users\\Asus\\Documents\\IKick Talent\\IFTA\\src\\components\\Vote\\Vote.js":"8","C:\\Users\\Asus\\Documents\\IKick Talent\\IFTA\\src\\components\\Home\\Home.js":"9","C:\\Users\\Asus\\Documents\\IKick Talent\\IFTA\\src\\components\\Home\\YTVideo\\YTVideo.js":"10","C:\\Users\\Asus\\Documents\\IKick Talent\\IFTA\\src\\components\\Footer\\Footer.js":"11","C:\\Users\\Asus\\Documents\\IKick Talent\\IFTA\\src\\components\\LoginModal\\LoginModal.js":"12","C:\\Users\\Asus\\Documents\\IKick Talent\\IFTA\\src\\components\\MovieGrid\\MovieGrid.js":"13","C:\\Users\\Asus\\Documents\\IKick Talent\\IFTA\\src\\components\\Navbar\\Navbar.js":"14","C:\\Users\\Asus\\Documents\\IKick Talent\\IFTA\\src\\components\\Home\\Category\\Category.js":"15","C:\\Users\\Asus\\Documents\\IKick Talent\\IFTA\\src\\components\\Home\\GridImages\\GridImages.js":"16","C:\\Users\\Asus\\Documents\\IKick Talent\\IFTA\\src\\components\\MovieGrid\\ExpiredGrid\\ExpiredGrid.js":"17"},{"size":710,"mtime":1613488803151,"results":"18","hashOfConfig":"19"},{"size":375,"mtime":1613488803206,"results":"20","hashOfConfig":"19"},{"size":375,"mtime":1613488801567,"results":"21","hashOfConfig":"19"},{"size":1784,"mtime":1613489900465,"results":"22","hashOfConfig":"19"},{"size":1093,"mtime":1613488801565,"results":"23","hashOfConfig":"19"},{"size":9000,"mtime":1613488801549,"results":"24","hashOfConfig":"19"},{"size":1837,"mtime":1613488801763,"results":"25","hashOfConfig":"19"},{"size":1602,"mtime":1613488801736,"results":"26","hashOfConfig":"19"},{"size":2813,"mtime":1616519499131,"results":"27","hashOfConfig":"19"},{"size":299,"mtime":1613488801638,"results":"28","hashOfConfig":"19"},{"size":610,"mtime":1613488801575,"results":"29","hashOfConfig":"19"},{"size":3579,"mtime":1613488801649,"results":"30","hashOfConfig":"19"},{"size":8952,"mtime":1615969881657,"results":"31","hashOfConfig":"19"},{"size":5856,"mtime":1613492478780,"results":"32","hashOfConfig":"19"},{"size":1230,"mtime":1613488801614,"results":"33","hashOfConfig":"19"},{"size":2624,"mtime":1616518668945,"results":"34","hashOfConfig":"19"},{"size":2253,"mtime":1613488801653,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1bef0kv",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\Asus\\Documents\\IKick Talent\\IFTA\\src\\index.js",[],["77","78"],"C:\\Users\\Asus\\Documents\\IKick Talent\\IFTA\\src\\reportWebVitals.js",[],"C:\\Users\\Asus\\Documents\\IKick Talent\\IFTA\\src\\StateProvider.js",[],"C:\\Users\\Asus\\Documents\\IKick Talent\\IFTA\\src\\App.js",["79","80","81"],"import \"./App.css\";\r\nimport { BrowserRouter as Router, Route, Switch , HashRouter} from \"react-router-dom\";\r\nimport Home from \"./components/Home/Home\";\r\nimport Voting from \"./components/Voting/Voting\";\r\nimport Bollywood from \"./components/Vote/Vote\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { actionTypes } from \"./Reducer\";\r\nimport './components/Home/particles.scss';\r\nimport Particle from \"./Particle\";\r\nimport \"./components/Vote/Vote.css\";\r\nimport \"./components/Voting/Voting.css\";\r\n\r\nfunction App() {\r\n  const [{}, dispatch] = useStateValue();\r\n\r\n  useEffect(() => {\r\n    getAwards();\r\n    checkIfExpired();\r\n  }, []);\r\n\r\n  const checkIfExpired = () => {\r\n    axios\r\n      .get(\"http://13.235.90.125:8000/show/?showId=602a7e3c14367b662559c85f\")\r\n      .then((res) => {\r\n        dispatch({\r\n          type: actionTypes.SET_EXPIREDandTOTALVOTE,\r\n          expired: res.data.payload.isExpired,\r\n          totalVotes: res.data.payload.voteCount,\r\n        });\r\n      });\r\n  };\r\n\r\n  const getAwards = () => {\r\n    axios\r\n      .get(\r\n        \"http://13.235.90.125:8000/show/fetchCategories?showId=602a7e3c14367b662559c85f\"\r\n      )\r\n      .then((res) => {\r\n        dispatch({\r\n          type: actionTypes.SET_AWARDS,\r\n          awards: res.data.payload,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <HashRouter>\r\n      <div className=\"app\">\r\n        \r\n        <Switch>\r\n          <Route path=\"/voting\" component={Voting} />\r\n          <Route path=\"/vote/:award\" component={Bollywood} />\r\n          <Route path=\"/\" component={Home} />\r\n        </Switch>\r\n        <div class=\"animation-wrapper\">\r\n          <Particle />\r\n        </div>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Asus\\Documents\\IKick Talent\\IFTA\\src\\Reducer.js",[],"C:\\Users\\Asus\\Documents\\IKick Talent\\IFTA\\src\\Particle.js",[],"C:\\Users\\Asus\\Documents\\IKick Talent\\IFTA\\src\\components\\Voting\\Voting.js",["82","83"],"import React, { useCallback, useEffect } from \"react\";\r\n// import \"./Voting.css\";\r\nimport logo1 from \"../../images/sc2.jpg\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport YTVideo from \"../Home/YTVideo/YTVideo\";\r\nimport Category from \"../Home/Category/Category\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\nimport { actionTypes } from \"../../Reducer\";\r\nimport LoginModal from \"../LoginModal/LoginModal\";\r\nimport CountUp from \"react-countup\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Voting = () => {\r\n  const [{ userIdentification, totalVotes }, dispatch] = useStateValue();\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    if (userIdentification !== null) {\r\n      const authToken = sessionStorage.getItem(\"authToken\").split(\" \")[1];\r\n      dispatch({\r\n        type: actionTypes.SET_TOKEN,\r\n        token: authToken,\r\n      });\r\n    }\r\n  }, [userIdentification]);\r\n  const history = useHistory();\r\n  const goToHome = ()=>{\r\n    history.push(\"/\")\r\n  }\r\n  return (\r\n    <div className=\"voting\">\r\n      <div className=\"voting__login\">\r\n        <h2>\r\n          Total Votes casted: <CountUp end={totalVotes} duration={2.75} />\r\n        </h2>\r\n        <div style={{display:'flex',flexDirection:'row'}}>\r\n          <div className=\"box\">\r\n            <button className=\"modal__btn\" onClick={()=>goToHome()}>Home</button>\r\n          </div>\r\n          <LoginModal />\r\n        </div>\r\n      </div>\r\n      <img className=\"top-img\" src={logo1} alt=\"iifa-logo\" />\r\n      <Navbar />\r\n      {/* <img className=\"bottom-img\" src={logo2} alt=\"iifa-logo\" /> */}\r\n      <div className=\"voting__video\">\r\n        <YTVideo />\r\n      </div>\r\n      <div className=\"voting__category\">\r\n        <Category />\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Voting;\r\n","C:\\Users\\Asus\\Documents\\IKick Talent\\IFTA\\src\\components\\Vote\\Vote.js",["84"],"import React, { useEffect } from \"react\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport logo1 from \"../../images/sc2.jpg\";\r\n// import \"./Vote.css\";\r\nimport MovieGrid from \"../MovieGrid/MovieGrid\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport { withRouter ,useHistory} from \"react-router-dom\";\r\nimport CountUp from \"react-countup\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\nimport LoginModal from \"../LoginModal/LoginModal\";\r\n\r\nconst Vote = ({ match }) => {\r\n  const [{ totalVotes }, dispatch] = useStateValue();\r\n\r\n  useEffect(() => window.scrollTo(0, 0), []);\r\n  const award = match.params.award;\r\n  const history = useHistory();\r\n  const goToHome = ()=>{\r\n    history.push(\"/\")\r\n  }\r\n  const goToBack = ()=>{\r\n    history.push(\"/voting\")\r\n  }\r\n  \r\n  return (\r\n    <div className=\"vote\">\r\n      <div className=\"voting__login\">\r\n        <h2>\r\n          Total Votes casted: <CountUp end={totalVotes} duration={2.75} />\r\n        </h2>\r\n        <div style={{display:'flex',flexDirection:'row'}}>\r\n          <div className=\"box\">\r\n            <button className=\"modal__btn\" onClick={()=>goToHome()}>Home</button>\r\n          </div>\r\n          <div className=\"box\">\r\n            <button className=\"modal__btn\" onClick={()=>goToBack()}>Back</button>\r\n          </div>\r\n          <LoginModal />\r\n        </div>\r\n      </div>\r\n      <img className=\"top-img\" src={logo1} alt=\"iifa-logo\" />\r\n      <Navbar />\r\n      {/* <img className=\"bottom-img\" src={logo2} alt=\"iifa-logo\" /> */}\r\n      <MovieGrid award={award} />\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Vote);\r\n","C:\\Users\\Asus\\Documents\\IKick Talent\\IFTA\\src\\components\\Home\\Home.js",["85","86"],"C:\\Users\\Asus\\Documents\\IKick Talent\\IFTA\\src\\components\\Home\\YTVideo\\YTVideo.js",[],"C:\\Users\\Asus\\Documents\\IKick Talent\\IFTA\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\Asus\\Documents\\IKick Talent\\IFTA\\src\\components\\LoginModal\\LoginModal.js",[],"C:\\Users\\Asus\\Documents\\IKick Talent\\IFTA\\src\\components\\MovieGrid\\MovieGrid.js",["87","88","89","90"],"import React from \"react\";\r\nimport \"./MovieGrid.css\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { Dialog } from \"@material-ui/core\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\nimport ExpiredGrid from \"./ExpiredGrid/ExpiredGrid\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\r\nimport { Modal } from '@material-ui/core'\r\nimport $ from 'jquery'\r\nconst MovieGrid = ({ award }) => {\r\n  const [{ userIdentification, sessionExpired }, dispatch] = useStateValue();\r\n\r\n  // OPEN OF MADALS\r\n  const [open, setOpen] = useState(false);\r\n  const [openConfirm, setOpenConfirm] = useState(false);\r\n  const [openWeblink, setOpenWeblink] = useState(false);\r\n\r\n  // DATA STORING\r\n  const [movies, setMovies] = useState({});\r\n  const [modalData, setModalData] = useState({});\r\n  const [sesExpired, setSesExpired] = useState(null);\r\n  const [carouselData, setCarouselData] = useState([]);\r\n  const match = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (sessionExpired) {\r\n      axios\r\n        .get(`http://13.235.90.125:8000/award/results?id=${award}`)\r\n        .then((res) => setSesExpired(res.data.payload));\r\n    } else {\r\n      fetchNominees(userIdentification);\r\n    }\r\n\r\n    axios\r\n      .get(\r\n        \"http://13.235.90.125:8000/show/fetchCategories?showId=602a7e3c14367b662559c85f\"\r\n      )\r\n      .then((res) => fetchCarouselCategories(res.data.payload));\r\n  }, [award]);\r\n\r\n  const fetchNominees = (userIdentification) => {\r\n    if (userIdentification) {\r\n      const authToken = sessionStorage.getItem(\"authToken\").split(\" \")[1];\r\n      axios\r\n        .get(`http://13.235.90.125:8000/award/logedIn?id=${award}`, {\r\n          headers: { Authorization: `Bearer ${authToken}` },\r\n        })\r\n        .then((res) => {\r\n          if (res.data.payload[0].votedNomination) {\r\n            let nominations = res.data.payload[0].nominations;\r\n            nominations.unshift(res.data.payload[0].votedNomination);\r\n            setMovies({\r\n              nominations: nominations,\r\n              heading: res.data.payload[0].heading,\r\n              voteCount: res.data.payload[0].voteCount,\r\n              votedOnce: true,\r\n            });\r\n          } else {\r\n            setMovies({\r\n              nominations: res.data.payload[0].nominations,\r\n              heading: res.data.payload[0].heading,\r\n              voteCount: res.data.payload[0].voteCount,\r\n              votedOnce: false,\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => alert(err));\r\n    } else {\r\n      axios\r\n        .get(`http://13.235.90.125:8000/award?id=${award}`)\r\n        .then((res) => {\r\n          setMovies(res.data.payload[0]);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  const fetchCarouselCategories = (arr) => {\r\n    let carouselArray = [];\r\n    arr.forEach((item) => {\r\n      item.awards.forEach((awd) => {\r\n        if (awd._id === award) {\r\n          item.awards.forEach((carousel) => carouselArray.push(carousel._id));\r\n        }\r\n      });\r\n    });\r\n    setCarouselData(carouselArray);\r\n  };\r\n  // SETS the CURRENT POSITION IN AN ARRAY\r\n  if (carouselData) {\r\n    sessionStorage.setItem(\r\n      \"currentCarouselPosition\",\r\n      carouselData.indexOf(award)\r\n    );\r\n  }\r\n\r\n  // PREV BUTTON\r\n  let current = parseInt(sessionStorage.getItem(\"currentCarouselPosition\"));\r\n  const handlePrevious = () => {\r\n    const length = carouselData.length;\r\n    current--;\r\n    if (current < 0) {\r\n      current = length - 1;\r\n    }\r\n    history.replace(`/vote/${carouselData[current]}`);\r\n  };\r\n\r\n  // NEXT BUTTON\r\n  const handleNext = () => {\r\n    const length = carouselData.length;\r\n    current++;\r\n    if (current > length - 1) {\r\n      current = 0;\r\n    }\r\n    history.replace(`/vote/${carouselData[current]}`);\r\n  };\r\n\r\n  const handleVote = (key) => {\r\n    if (userIdentification) {\r\n      const authToken = sessionStorage.getItem(\"authToken\").split(\" \")[1];\r\n      const config = {\r\n        headers: { Authorization: `Bearer ${authToken}` },\r\n      };\r\n\r\n      const bodyParameters = {\r\n        award: match.params.award,\r\n        answer: key,\r\n      };\r\n\r\n      axios\r\n        .post(\r\n          \"http://13.235.90.125:8000/award/add-answer\",\r\n          bodyParameters,\r\n          config\r\n        )\r\n        .then((res) => {\r\n          setOpen(false);\r\n          setTimeout(() => setOpenConfirm(true), 500);\r\n          fetchNominees(userIdentification);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    } else {\r\n      setOpen(false);\r\n      setTimeout(() => {\r\n        setModalData({\r\n          name: \"Need to Login before voting\",\r\n        });\r\n        setOpenConfirm(true);\r\n      }, 100);\r\n    }\r\n  };\r\n\r\n  return !sessionExpired ? (\r\n    <div className=\"movieGrid\">\r\n      <div className=\"movieGrid__carousel\">\r\n        <NavigateBeforeIcon onClick={handlePrevious} />\r\n        <h1>{movies.heading}</h1>\r\n        <NavigateNextIcon onClick={handleNext} />\r\n      </div>\r\n\r\n      <p className=\"movieGrid__votes\">\r\n        Number of people Voted: <span>{movies.voteCount || \"0\"}</span>\r\n      </p>\r\n\r\n      <Link to=\"/voting\">Main Categories</Link>\r\n\r\n      <div className=\"movieGrid__container\">\r\n        {movies.nominations?.map((movie, index) => (\r\n          <div\r\n            className={`movieGrid__movies ${movies?.votedOnce && \"movieGrid__votedOnce\"\r\n              }`}\r\n          >\r\n            <img src={movie?.image} style={{ cursor: 'pointer' }} onClick={() => { setModalData({ name: movie.name, weblink: movie.weblink, ytlink: movie.ytlink }); setOpenWeblink(true) }} alt=\"img\" />\r\n            <div>\r\n              <h2>{movie.name.split('(')[0]}<br /><span style={{ fontSize: '0.7rem' }}>{movie.name.split('(')[1].replace(')', '')}</span></h2>\r\n              <button\r\n                disabled={movies?.votedOnce}\r\n                className={`movieGrid__moviesBtn ${movies?.votedOnce && `movieGrid__moviesBtn${index}`\r\n                  }`}\r\n                onClick={() => {\r\n                  if (userIdentification) {\r\n                    setModalData({\r\n                      name: movie.name,\r\n                      key: movie.key,\r\n                    });\r\n                    setOpen(true);\r\n                  } else {\r\n                    $(\"#popup1\").css({ visibility: \"visible\", opacity: \"1\" });\r\n                  }\r\n\r\n                }}\r\n              >\r\n                {movies?.votedOnce && index == 0\r\n                  ? \"Voted\"\r\n                  : !movies?.votedOnce\r\n                    ? \"Vote\"\r\n                    : \"Closed\"}\r\n              </button>\r\n              <h6 style={{ cursor: 'pointer' }}>\r\n                <a href={movie.weblink} target=\"_blank\">Read More</a>\r\n              </h6>\r\n            </div>\r\n          </div>\r\n        ))}\r\n        <Dialog\r\n          open={open}\r\n          onClose={() => {\r\n            setModalData({});\r\n            setOpen(false);\r\n          }}\r\n        >\r\n          <div className=\"movieGrid__modal\">\r\n            <h1>{modalData.name}</h1>\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  setTimeout(() => setModalData({}), 500);\r\n                  setOpen(false);\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button onClick={() => handleVote(modalData.key)}>Submit</button>\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n      </div>\r\n      <Dialog open={openConfirm}>\r\n        <div className=\"movieGrid__modal movieGrid__modalSecond\">\r\n          <h1>\r\n            {userIdentification && \"You have voted to: \"}\r\n            <span>{modalData.name}</span>\r\n          </h1>\r\n          <button\r\n            onClick={() => {\r\n              setModalData({});\r\n              setOpenConfirm(false);\r\n            }}\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      </Dialog>\r\n      <Modal open={openWeblink}>\r\n        <div className=\"movieGrid__modalSecond\" style={{\r\n          position: 'absolute',\r\n          top: '50%',\r\n          left: '50%',\r\n          marginRight: '-50%',\r\n          transform: 'translate(-50%, -50%)', height: '70vh', width: '80vw'\r\n        }\r\n        }>\r\n          <iframe width=\"100%\" height=\"100%\" title=\"youtbe\"\r\n            src={\"https://www.youtube.com/embed/\" + modalData.ytlink + \"?autoplay=1\"}>\r\n          </iframe>\r\n          <button\r\n            onClick={() => {\r\n              setModalData({});\r\n              setOpenWeblink(false);\r\n            }}\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  ) : (\r\n    <ExpiredGrid\r\n      sesExpired={sesExpired}\r\n      handlePrevious={handlePrevious}\r\n      handleNext={handleNext}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MovieGrid;\r\n","C:\\Users\\Asus\\Documents\\IKick Talent\\IFTA\\src\\components\\Navbar\\Navbar.js",["91","92","93","94"],"import React, { useState, useEffect ,useCallback} from \"react\";\r\nimport \"./Navbar.css\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Link, useLocation, useRouteMatch , useHistory} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\n\r\nconst Navbar = () => {\r\n  const [{ userIdentification }, dispatch] = useStateValue();\r\n  const [navTitle, setNavTitle] = useState([]);\r\n\r\n  const location = useLocation();\r\n  const match = useRouteMatch();\r\n  const history = useHistory();\r\n  // setTimeout(() => {\r\n  //   window.addEventListener(\"scroll\", function () {\r\n  //     let header = document.querySelector(\"#navbar\");\r\n  //     header.classList.toggle(\"sticky\", window.scrollY > 100);\r\n  //   });\r\n  // }, 500);\r\n\r\n  useEffect(() => {\r\n    if (userIdentification) {\r\n      const authToken = sessionStorage.getItem(\"authToken\").split(\" \")[1];\r\n      axios\r\n        .get(\r\n          \"http://13.235.90.125:8000/show/fetchCategories/logedIn?showId=602a7e3c14367b662559c85f\",\r\n          {\r\n            headers: { Authorization: `Bearer ${authToken}` },\r\n          }\r\n        )\r\n        .then((res) => setNavTitle(res.data.payload))\r\n        .catch((err) => alert(err));\r\n    } else {\r\n      axios\r\n        .get(\r\n          \"http://13.235.90.125:8000/show/fetchCategories?showId=602a7e3c14367b662559c85f\"\r\n        )\r\n        .then((res) => setNavTitle(res.data.payload));\r\n    }\r\n\r\n    if (location.pathname === \"/voting\" && location.state !== undefined) {\r\n      // Getting the navId passed from category\r\n      const { navId } = location.state;\r\n      setTimeout(() => {\r\n        handleNav(navId);\r\n      }, 700);\r\n    }\r\n\r\n    if (match.path === \"/vote/:award\") {\r\n      const { award } = match.params;\r\n      setTimeout(() => handleVoteNav(award), 400);\r\n    }\r\n  }, [userIdentification]);\r\n  let closeId = '';\r\n  const handleNav = (id) => {\r\n    const dropdown = document.getElementById(id);\r\n    const allDropdown = document.getElementsByClassName(\"navbar__dropdown\");\r\n    const allNavItems = document.getElementsByClassName(\"nav__items\");\r\n    const blurdiv = document.getElementById('blur-div');\r\n    if (match.path === \"/vote/:award\") {\r\n      handleVoteNav(null, dropdown);\r\n    }\r\n    \r\n    if (\r\n      dropdown?.classList.contains(\"navbar__dropdownShow\") &&\r\n      dropdown !== null\r\n    ) {\r\n      // dropdown.classList.remove(\"navbar__dropdownShow\");\r\n      // // Removing Active Class\r\n      // dropdown?.previousSibling.classList.remove(\"nav-active\");\r\n\r\n      blurdiv.style.display = \"none\";\r\n    } else {\r\n      if(closeId==id) return;\r\n      Array.from(allDropdown).forEach(function (el) {\r\n        el.classList.remove(\"navbar__dropdownShow\");\r\n      });\r\n      dropdown?.classList.add(\"navbar__dropdownShow\");\r\n      // Adding Active Class\r\n      Array.from(allNavItems).forEach(function (el) {\r\n        el.classList.remove(\"nav-active\");\r\n      });\r\n      dropdown?.focus()\r\n      blurdiv.style.display=\"block\";\r\n      dropdown?.previousSibling.classList.add(\"nav-active\");\r\n    }\r\n  };\r\n  const closeNav = (id)=>{\r\n    const dropdown = document.getElementById(id);\r\n    const blurdiv = document.getElementById('blur-div');\r\n    closeId = id;\r\n    setTimeout(()=>{\r\n      if (\r\n        dropdown?.classList.contains(\"navbar__dropdownShow\") &&\r\n        dropdown !== null\r\n      ) {\r\n        dropdown.classList.remove(\"navbar__dropdownShow\");\r\n        // Removing Active Class\r\n        dropdown?.previousSibling.classList.remove(\"nav-active\");\r\n        blurdiv.style.display = \"none\";\r\n      }\r\n    },0);\r\n    setTimeout(()=>{\r\n      closeId='';\r\n    },200)\r\n \r\n  }\r\n  const handleVoteNav = (id, dropdownId) => {\r\n    if (id === null) {\r\n      console.log(true);\r\n      const prev = dropdownId.previousSibling;\r\n      const allNavItems = document.getElementsByClassName(\"nav__items\");\r\n      Array.from(allNavItems).forEach(function (el) {\r\n        el.classList.remove(\"nav-active-vote\");\r\n      });\r\n      prev.classList.add(\"nav-active-vote\");\r\n    } else {\r\n      const prev = document.getElementById(id).parentElement.previousSibling;\r\n      const allNavItems = document.getElementsByClassName(\"nav__items\");\r\n      Array.from(allNavItems).forEach(function (el) {\r\n        el.classList.remove(\"nav-active-vote\");\r\n      });\r\n      prev.classList.add(\"nav-active-vote\");\r\n    }\r\n  };\r\n  const goToVote = (id)=>{history.push(`/vote/${id}`)}\r\n  return (\r\n    <nav className=\"navbar\" id=\"navbar\">\r\n      <ul className=\"navbar__nav\">\r\n        {navTitle.map((nav,i) => (\r\n          <>\r\n            <li\r\n              className=\"nav__items\"\r\n              key={nav._id}\r\n              onClick={() => handleNav(nav._id)}\r\n            >\r\n              {nav.title} <ExpandMoreIcon />\r\n            </li>\r\n\r\n            <div tabIndex={0} className=\"navbar__dropdown\"  onBlur={(e)=>closeNav(nav._id)} id={nav._id}>\r\n              {nav.awards?.map((award) => (\r\n                <Link\r\n                  id={award._id}\r\n                  onFocus={()=>goToVote(award._id)}\r\n                  key={award._id}\r\n                  to={`/vote/${award._id}`}\r\n                  style={{\r\n                    background: `${\r\n                      award.answer.length > 0\r\n                        ? \"linear-gradient(to right, #233329, #63D471)\"\r\n                        : \"#000\"\r\n                    }`,\r\n                  }}\r\n                >\r\n                  {award.heading}\r\n                  {award.answer.length > 0 && (\r\n                    <span className=\"navbar__dropdown-voted\">\r\n                      VOTED<span></span>\r\n                    </span>\r\n                  )}\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </>\r\n        ))}\r\n        <div id=\"blur-div\">\r\n\r\n        </div>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\Asus\\Documents\\IKick Talent\\IFTA\\src\\components\\Home\\Category\\Category.js",["95"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Category.css\";\r\nimport { useStateValue } from \"../../../StateProvider\";\r\n\r\nconst Category = ({ show }) => {\r\n  const [{ awards }, _] = useStateValue();\r\n\r\n  const ConditionalLink = ({ children, to, condition, secTo }) =>\r\n    condition && to ? (\r\n      <Link to={to}>{children}</Link>\r\n    ) : (\r\n      <Link to={secTo}>{children}</Link>\r\n    );\r\n\r\n  return (\r\n    <div className=\"category\">\r\n      {awards?.map((award, index) => (\r\n        <ConditionalLink\r\n          to={{\r\n            pathname: \"/voting\",\r\n            state: {\r\n              navId: award._id,\r\n            },\r\n          }}\r\n          condition={show}\r\n          key={award._id}\r\n          secTo={`/vote/${award.awards[0]._id}`}\r\n        >\r\n          <div className={`category-${index + 1}`}>\r\n            <h3>{award.title}</h3>\r\n            {show && (\r\n              <div>\r\n                {award.awards.map((a) => (\r\n                  <p key={a._id}>{a.heading}</p>\r\n                ))}\r\n              </div>\r\n            )}\r\n            {show && <button>Vote</button>}\r\n          </div>\r\n        </ConditionalLink>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","C:\\Users\\Asus\\Documents\\IKick Talent\\IFTA\\src\\components\\Home\\GridImages\\GridImages.js",[],"C:\\Users\\Asus\\Documents\\IKick Talent\\IFTA\\src\\components\\MovieGrid\\ExpiredGrid\\ExpiredGrid.js",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":2,"column":27,"nodeType":"102","messageId":"103","endLine":2,"endColumn":33},{"ruleId":"104","severity":1,"message":"105","line":16,"column":10,"nodeType":"106","messageId":"107","endLine":16,"endColumn":12},{"ruleId":"108","severity":1,"message":"109","line":21,"column":6,"nodeType":"110","endLine":21,"endColumn":8,"suggestions":"111"},{"ruleId":"100","severity":1,"message":"112","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":28},{"ruleId":"108","severity":1,"message":"113","line":26,"column":6,"nodeType":"110","endLine":26,"endColumn":26,"suggestions":"114"},{"ruleId":"100","severity":1,"message":"115","line":13,"column":26,"nodeType":"102","messageId":"103","endLine":13,"endColumn":34},{"ruleId":"108","severity":1,"message":"116","line":26,"column":19,"nodeType":"117","endLine":26,"endColumn":23},{"ruleId":"108","severity":1,"message":"118","line":35,"column":19,"nodeType":"117","endLine":35,"endColumn":23},{"ruleId":"100","severity":1,"message":"115","line":15,"column":50,"nodeType":"102","messageId":"103","endLine":15,"endColumn":58},{"ruleId":"108","severity":1,"message":"119","line":44,"column":6,"nodeType":"110","endLine":44,"endColumn":13,"suggestions":"120"},{"ruleId":"121","severity":1,"message":"122","line":198,"column":45,"nodeType":"123","messageId":"107","endLine":198,"endColumn":47},{"ruleId":"124","severity":1,"message":"125","line":205,"column":41,"nodeType":"126","endLine":205,"endColumn":56},{"ruleId":"100","severity":1,"message":"112","line":1,"column":38,"nodeType":"102","messageId":"103","endLine":1,"endColumn":49},{"ruleId":"100","severity":1,"message":"115","line":9,"column":34,"nodeType":"102","messageId":"103","endLine":9,"endColumn":42},{"ruleId":"108","severity":1,"message":"127","line":54,"column":6,"nodeType":"110","endLine":54,"endColumn":26,"suggestions":"128"},{"ruleId":"121","severity":1,"message":"122","line":75,"column":17,"nodeType":"123","messageId":"107","endLine":75,"endColumn":19},{"ruleId":"100","severity":1,"message":"129","line":7,"column":22,"nodeType":"102","messageId":"103","endLine":7,"endColumn":23},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkIfExpired' and 'getAwards'. Either include them or remove the dependency array.","ArrayExpression",["132"],"'useCallback' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["133"],"'dispatch' is assigned a value but never used.","Assignments to the 'loaded1' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","Assignments to the 'loaded2' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has missing dependencies: 'fetchCarouselCategories', 'fetchNominees', 'sessionExpired', and 'userIdentification'. Either include them or remove the dependency array.",["134"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","React Hook useEffect has missing dependencies: 'handleNav', 'location.pathname', 'location.state', 'match.params', and 'match.path'. Either include them or remove the dependency array.",["135"],"'_' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},"Update the dependencies array to be: [checkIfExpired, getAwards]",{"range":"144","text":"145"},"Update the dependencies array to be: [dispatch, userIdentification]",{"range":"146","text":"147"},"Update the dependencies array to be: [award, fetchCarouselCategories, fetchNominees, sessionExpired, userIdentification]",{"range":"148","text":"149"},"Update the dependencies array to be: [handleNav, location.pathname, location.state, match.params, match.path, userIdentification]",{"range":"150","text":"151"},[700,702],"[checkIfExpired, getAwards]",[917,937],"[dispatch, userIdentification]",[1620,1627],"[award, fetchCarouselCategories, fetchNominees, sessionExpired, userIdentification]",[1841,1861],"[handleNav, location.pathname, location.state, match.params, match.path, userIdentification]"]