[{"D:\\IFTA\\src\\index.js":"1","D:\\IFTA\\src\\App.js":"2","D:\\IFTA\\src\\reportWebVitals.js":"3","D:\\IFTA\\src\\StateProvider.js":"4","D:\\IFTA\\src\\Reducer.js":"5","D:\\IFTA\\src\\components\\Home\\Home.js":"6","D:\\IFTA\\src\\components\\Voting\\Voting.js":"7","D:\\IFTA\\src\\components\\Vote\\Vote.js":"8","D:\\IFTA\\src\\components\\Home\\YTVideo\\YTVideo.js":"9","D:\\IFTA\\src\\components\\Footer\\Footer.js":"10","D:\\IFTA\\src\\components\\Home\\Category\\Category.js":"11","D:\\IFTA\\src\\components\\Home\\GridImages\\GridImages.js":"12","D:\\IFTA\\src\\components\\LoginModal\\LoginModal.js":"13","D:\\IFTA\\src\\components\\Navbar\\Navbar.js":"14","D:\\IFTA\\src\\components\\MovieGrid\\MovieGrid.js":"15","D:\\IFTA\\src\\components\\MovieGrid\\ExpiredGrid\\ExpiredGrid.js":"16","D:\\IFTA\\src\\Particle.js":"17"},{"size":710,"mtime":1611512976266,"results":"18","hashOfConfig":"19"},{"size":1784,"mtime":1612015958686,"results":"20","hashOfConfig":"19"},{"size":375,"mtime":1611512976266,"results":"21","hashOfConfig":"19"},{"size":375,"mtime":1611512976218,"results":"22","hashOfConfig":"19"},{"size":1093,"mtime":1611659584540,"results":"23","hashOfConfig":"19"},{"size":3393,"mtime":1611858410678,"results":"24","hashOfConfig":"19"},{"size":1837,"mtime":1612015939022,"results":"25","hashOfConfig":"19"},{"size":1602,"mtime":1612015939001,"results":"26","hashOfConfig":"19"},{"size":299,"mtime":1612015938885,"results":"27","hashOfConfig":"19"},{"size":610,"mtime":1611512976222,"results":"28","hashOfConfig":"19"},{"size":1230,"mtime":1612015938884,"results":"29","hashOfConfig":"19"},{"size":2484,"mtime":1611652926483,"results":"30","hashOfConfig":"19"},{"size":3579,"mtime":1611659002381,"results":"31","hashOfConfig":"19"},{"size":5856,"mtime":1611989598546,"results":"32","hashOfConfig":"19"},{"size":8429,"mtime":1612015938942,"results":"33","hashOfConfig":"19"},{"size":2253,"mtime":1611579176594,"results":"34","hashOfConfig":"19"},{"size":9000,"mtime":1611861666444,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"wsqtge",{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"D:\\IFTA\\src\\index.js",[],["77","78"],"D:\\IFTA\\src\\App.js",["79","80","81"],"D:\\IFTA\\src\\reportWebVitals.js",[],"D:\\IFTA\\src\\StateProvider.js",[],"D:\\IFTA\\src\\Reducer.js",[],"D:\\IFTA\\src\\components\\Home\\Home.js",["82","83"],"import React, { useEffect , useRef, useState} from \"react\";\r\nimport \"./Home.css\";\r\nimport './particles.scss';\r\nimport YTVideo from \"./YTVideo/YTVideo\";\r\nimport GridImages from \"./GridImages/GridImages\";\r\nimport Category from \"./Category/Category\";\r\nimport twitter from \"../../images/tw.png\";\r\nimport facebook from \"../../images/fb.png\";\r\nimport insta from \"../../images/insta.png\";\r\nimport gif1_small from \"../../images/screen-1_1_small.gif\";\r\nimport gif1_large from \"../../images/screen-1_1.gif\";\r\nimport gif2_small from \"../../images/screen-1_2_small.gif\";\r\nimport gif2_large from \"../../images/screen-1_2.gif\";\r\n\r\nconst Home = () => {\r\n  const catRef = useRef(null);\r\n  const [gif1,setGif1] = useState(gif1_small);\r\n  const [gif2,setGif2] = useState(gif2_small);\r\n  \r\n  let loaded1 = false;\r\n  let loaded2 = false;\r\n  useEffect(()=>{\r\n    if(!loaded1){\r\n      let img1 = new Image();\r\n      img1.onload=()=>{\r\n        loaded1 = true;\r\n        setGif1(gif1_large);\r\n      }\r\n      img1.src = gif1_large;\r\n    }\r\n\r\n    if(!loaded2){\r\n      let img2 = new Image();\r\n      img2.onload=()=>{\r\n        loaded2 = true;\r\n        setGif2(gif2_large);\r\n      }\r\n      img2.src = gif2_large;\r\n    }\r\n  })\r\n  return (\r\n    <div className=\"home\">\r\n      \r\n      <section className=\"home__first\">\r\n        <img src={gif1} alt=\"iifa-award\" />\r\n        <div>\r\n          <h1>IFTA</h1>\r\n          <p>You Vote</p>\r\n          <p>You Nominate</p>\r\n          <p>You Decide the Winner</p>\r\n          <button onClick={()=>catRef.current.scrollIntoView()}>Vote</button>\r\n        </div>\r\n        <img src={gif2} alt=\"iifa-award\" />\r\n      </section>\r\n      <section className=\"home__second\">\r\n        <YTVideo />\r\n      </section>\r\n      <section className=\"home__third\">\r\n        <div>\r\n          <GridImages />\r\n        </div>\r\n        <div>\r\n          <GridImages secId />\r\n        </div>\r\n      </section>\r\n      <section ref={catRef} className=\"home__fourth\">\r\n        <Category show />\r\n      </section>\r\n      <footer className=\"home__footer\">\r\n        <div className=\"home__footerLeft\">\r\n          <h1>IFTA</h1>\r\n          <div>\r\n            <div>\r\n              <p>Quizando Live!</p>\r\n              <p>Quizando classic</p>\r\n              <p>Free Games</p>\r\n              <p>Private Events</p>\r\n              <p>Closed Quizes</p>\r\n            </div>\r\n            <div>\r\n              <p>Quizando Live!</p>\r\n              <p>Quizando classic</p>\r\n              <p>Free Games</p>\r\n              <p>Private Events</p>\r\n              <p>Closed Quizes</p>\r\n            </div>\r\n            <div>\r\n              <p>Quizando Live!</p>\r\n              <p>Quizando classic</p>\r\n              <p>Free Games</p>\r\n              <p>Closed Quizes</p>\r\n            </div>\r\n            <div>\r\n              <p>Free Games</p>\r\n              <p>Private Events</p>\r\n              <p>Closed Quizes</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"home__footerRight\">\r\n          <h1>Connect with us:</h1>\r\n          <div>\r\n            <img src={twitter} alt=\"twitter\" />\r\n            <img src={facebook} alt=\"facebook\" />\r\n            <img src={insta} alt=\"instagram\" />\r\n          </div>\r\n          <button>Customer Support</button>\r\n        </div>\r\n      </footer>\r\n      {/* To remove the eventListner error */}\r\n      <p id=\"navbar\"></p>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\IFTA\\src\\components\\Voting\\Voting.js",["84","85","86","87"],"import React, { useCallback, useEffect } from \"react\";\r\nimport \"./Voting.css\";\r\nimport logo1 from \"../../images/screen-2_1.jpg\";\r\nimport logo2 from \"../../images/screen-2_2.jpg\";\r\n\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport YTVideo from \"../Home/YTVideo/YTVideo\";\r\nimport Category from \"../Home/Category/Category\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\nimport { actionTypes } from \"../../Reducer\";\r\nimport LoginModal from \"../LoginModal/LoginModal\";\r\nimport CountUp from \"react-countup\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Voting = () => {\r\n  const [{ userIdentification, totalVotes }, dispatch] = useStateValue();\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    if (userIdentification !== null) {\r\n      const authToken = sessionStorage.getItem(\"authToken\").split(\" \")[1];\r\n      dispatch({\r\n        type: actionTypes.SET_TOKEN,\r\n        token: authToken,\r\n      });\r\n    }\r\n  }, [userIdentification]);\r\n  const history = useHistory();\r\n  const goToHome = ()=>{\r\n    history.push(\"/\")\r\n  }\r\n  return (\r\n    <div className=\"voting\">\r\n      <div className=\"voting__login\">\r\n        <h2>\r\n          Total Votes casted: <CountUp end={totalVotes} duration={2.75} />\r\n        </h2>\r\n        <div style={{display:'flex',flexDirection:'row'}}>\r\n          <div className=\"box\">\r\n            <button className=\"modal__btn\" onClick={()=>goToHome()}>Home</button>\r\n          </div>\r\n          <LoginModal />\r\n        </div>\r\n      </div>\r\n      <img className=\"top-img\" src={logo1} alt=\"iifa-logo\" />\r\n      \r\n      <div className=\"voting__category\">\r\n        <Category />\r\n      </div>\r\n      <div className=\"voting__video\">\r\n        <div className=\"text-container\">\r\n          <h3>Your vote counts!</h3>\r\n          <br></br>\r\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n        </div>\r\n        \r\n        <YTVideo /> \r\n      </div>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Voting;\r\n","D:\\IFTA\\src\\components\\Vote\\Vote.js",["88","89","90"],"import React, { useEffect } from \"react\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport logo1 from \"../../images/screen-2_1.jpg\";\r\nimport logo2 from \"../../images/screen-2_2.jpg\";\r\nimport \"./Vote.css\";\r\nimport MovieGrid from \"../MovieGrid/MovieGrid\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport { withRouter ,useHistory} from \"react-router-dom\";\r\nimport CountUp from \"react-countup\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\nimport LoginModal from \"../LoginModal/LoginModal\";\r\nimport Category from \"../Home/Category/Category\";\r\n\r\nconst Vote = ({ match }) => {\r\n  const [{ totalVotes }, dispatch] = useStateValue();\r\n\r\n  useEffect(() => window.scrollTo(0, 0), []);\r\n  const award = match.params.award;\r\n  const history = useHistory();\r\n  const goToHome = ()=>{\r\n    history.push(\"/\")\r\n  }\r\n  const goToBack = ()=>{\r\n    history.push(\"/voting\")\r\n  }\r\n  \r\n  return (\r\n    <div className=\"vote\">\r\n      <div className=\"voting__login\">\r\n        <h2>\r\n          Total Votes casted: <CountUp end={totalVotes} duration={2.75} />\r\n        </h2>\r\n        <div style={{display:'flex',flexDirection:'row'}}>\r\n          <div className=\"box\">\r\n            <button className=\"modal__btn\" onClick={()=>goToHome()}>Home</button>\r\n          </div>\r\n          <div className=\"box\">\r\n            <button className=\"modal__btn\" onClick={()=>goToBack()}>Back</button>\r\n          </div>\r\n          <LoginModal />\r\n        </div>\r\n      </div>\r\n      <img className=\"top-img\" src={logo1} alt=\"iifa-logo\" />\r\n      <div className=\"voting__category\">\r\n        <Category />\r\n      </div>\r\n      <MovieGrid award={award} />\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Vote);\r\n","D:\\IFTA\\src\\components\\Home\\YTVideo\\YTVideo.js",[],"D:\\IFTA\\src\\components\\Footer\\Footer.js",[],"D:\\IFTA\\src\\components\\Home\\Category\\Category.js",["91","92"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Category.css\";\r\nimport { useStateValue } from \"../../../StateProvider\";\r\nimport cricket from '../../../images/cricket.png';\r\nconst Category = ({ show }) => {\r\n  const [{ awards }, _] = useStateValue();\r\n\r\n  const ConditionalLink = ({ children, to, condition, secTo }) =>\r\n    condition && to ? (\r\n      <Link to={to}>{children}</Link>\r\n    ) : (\r\n      <Link to={secTo}>{children}</Link>\r\n    );\r\n\r\n  return (\r\n    <>\r\n    <h3 style={{color:'darkgray', textAlign:'center',width:'100%',marginTop:'20px',marginBottom:'20px'}}>Select Sport</h3>\r\n    <div className=\"category\">\r\n      {awards?.map((award, index) => (\r\n        <ConditionalLink\r\n          to={{\r\n            pathname: \"/voting\",\r\n            state: {\r\n              navId: award._id,\r\n            },\r\n          }}\r\n          condition={show}\r\n          key={award._id}\r\n          secTo={`/vote/${award.awards[0]._id}`}\r\n        >\r\n          <div className=\"each-category\">\r\n            <img src={cricket} style={{width:'32px',height:'32px',borderRadius:'50%',marginRight:'20px'}}></img>            \r\n            <small>{award.title}</small>\r\n\r\n            {/* {show && (\r\n              <div>\r\n                {award.awards.map((a) => (\r\n                  <p key={a._id}>{a.heading}</p>\r\n                ))}\r\n              </div>\r\n            )} */}\r\n            {/* {show && <button>Vote</button>} */}\r\n          </div>\r\n        </ConditionalLink>\r\n      ))}\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","D:\\IFTA\\src\\components\\Home\\GridImages\\GridImages.js",[],"D:\\IFTA\\src\\components\\LoginModal\\LoginModal.js",[],"D:\\IFTA\\src\\components\\Navbar\\Navbar.js",["93","94","95","96"],"import React, { useState, useEffect ,useCallback} from \"react\";\r\nimport \"./Navbar.css\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Link, useLocation, useRouteMatch , useHistory} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\n\r\nconst Navbar = () => {\r\n  const [{ userIdentification }, dispatch] = useStateValue();\r\n  const [navTitle, setNavTitle] = useState([]);\r\n\r\n  const location = useLocation();\r\n  const match = useRouteMatch();\r\n  const history = useHistory();\r\n  // setTimeout(() => {\r\n  //   window.addEventListener(\"scroll\", function () {\r\n  //     let header = document.querySelector(\"#navbar\");\r\n  //     header.classList.toggle(\"sticky\", window.scrollY > 100);\r\n  //   });\r\n  // }, 500);\r\n\r\n  useEffect(() => {\r\n    if (userIdentification) {\r\n      const authToken = sessionStorage.getItem(\"authToken\").split(\" \")[1];\r\n      axios\r\n        .get(\r\n          \"http://13.235.90.125:8000/show/fetchCategories/logedIn?showId=5ff351bcd2d84274b06e2783\",\r\n          {\r\n            headers: { Authorization: `Bearer ${authToken}` },\r\n          }\r\n        )\r\n        .then((res) => setNavTitle(res.data.payload))\r\n        .catch((err) => alert(err));\r\n    } else {\r\n      axios\r\n        .get(\r\n          \"http://13.235.90.125:8000/show/fetchCategories?showId=5ff351bcd2d84274b06e2783\"\r\n        )\r\n        .then((res) => setNavTitle(res.data.payload));\r\n    }\r\n\r\n    if (location.pathname === \"/voting\" && location.state !== undefined) {\r\n      // Getting the navId passed from category\r\n      const { navId } = location.state;\r\n      setTimeout(() => {\r\n        handleNav(navId);\r\n      }, 700);\r\n    }\r\n\r\n    if (match.path === \"/vote/:award\") {\r\n      const { award } = match.params;\r\n      setTimeout(() => handleVoteNav(award), 400);\r\n    }\r\n  }, [userIdentification]);\r\n  let closeId = '';\r\n  const handleNav = (id) => {\r\n    const dropdown = document.getElementById(id);\r\n    const allDropdown = document.getElementsByClassName(\"navbar__dropdown\");\r\n    const allNavItems = document.getElementsByClassName(\"nav__items\");\r\n    const blurdiv = document.getElementById('blur-div');\r\n    if (match.path === \"/vote/:award\") {\r\n      handleVoteNav(null, dropdown);\r\n    }\r\n    \r\n    if (\r\n      dropdown?.classList.contains(\"navbar__dropdownShow\") &&\r\n      dropdown !== null\r\n    ) {\r\n      // dropdown.classList.remove(\"navbar__dropdownShow\");\r\n      // // Removing Active Class\r\n      // dropdown?.previousSibling.classList.remove(\"nav-active\");\r\n\r\n      blurdiv.style.display = \"none\";\r\n    } else {\r\n      if(closeId==id) return;\r\n      Array.from(allDropdown).forEach(function (el) {\r\n        el.classList.remove(\"navbar__dropdownShow\");\r\n      });\r\n      dropdown?.classList.add(\"navbar__dropdownShow\");\r\n      // Adding Active Class\r\n      Array.from(allNavItems).forEach(function (el) {\r\n        el.classList.remove(\"nav-active\");\r\n      });\r\n      dropdown?.focus()\r\n      blurdiv.style.display=\"block\";\r\n      dropdown?.previousSibling.classList.add(\"nav-active\");\r\n    }\r\n  };\r\n  const closeNav = (id)=>{\r\n    const dropdown = document.getElementById(id);\r\n    const blurdiv = document.getElementById('blur-div');\r\n    closeId = id;\r\n    setTimeout(()=>{\r\n      if (\r\n        dropdown?.classList.contains(\"navbar__dropdownShow\") &&\r\n        dropdown !== null\r\n      ) {\r\n        dropdown.classList.remove(\"navbar__dropdownShow\");\r\n        // Removing Active Class\r\n        dropdown?.previousSibling.classList.remove(\"nav-active\");\r\n        blurdiv.style.display = \"none\";\r\n      }\r\n    },0);\r\n    setTimeout(()=>{\r\n      closeId='';\r\n    },200)\r\n \r\n  }\r\n  const handleVoteNav = (id, dropdownId) => {\r\n    if (id === null) {\r\n      console.log(true);\r\n      const prev = dropdownId.previousSibling;\r\n      const allNavItems = document.getElementsByClassName(\"nav__items\");\r\n      Array.from(allNavItems).forEach(function (el) {\r\n        el.classList.remove(\"nav-active-vote\");\r\n      });\r\n      prev.classList.add(\"nav-active-vote\");\r\n    } else {\r\n      const prev = document.getElementById(id).parentElement.previousSibling;\r\n      const allNavItems = document.getElementsByClassName(\"nav__items\");\r\n      Array.from(allNavItems).forEach(function (el) {\r\n        el.classList.remove(\"nav-active-vote\");\r\n      });\r\n      prev.classList.add(\"nav-active-vote\");\r\n    }\r\n  };\r\n  const goToVote = (id)=>{history.push(`/vote/${id}`)}\r\n  return (\r\n    <nav className=\"navbar\" id=\"navbar\">\r\n      <ul className=\"navbar__nav\">\r\n        {navTitle.map((nav,i) => (\r\n          <>\r\n            <li\r\n              className=\"nav__items\"\r\n              key={nav._id}\r\n              onClick={() => handleNav(nav._id)}\r\n            >\r\n              {nav.title} <ExpandMoreIcon />\r\n            </li>\r\n\r\n            <div tabIndex={0} className=\"navbar__dropdown\"  onBlur={(e)=>closeNav(nav._id)} id={nav._id}>\r\n              {nav.awards?.map((award) => (\r\n                <Link\r\n                  id={award._id}\r\n                  onFocus={()=>goToVote(award._id)}\r\n                  key={award._id}\r\n                  to={`/vote/${award._id}`}\r\n                  style={{\r\n                    background: `${\r\n                      award.answer.length > 0\r\n                        ? \"linear-gradient(to right, #233329, #63D471)\"\r\n                        : \"#000\"\r\n                    }`,\r\n                  }}\r\n                >\r\n                  {award.heading}\r\n                  {award.answer.length > 0 && (\r\n                    <span className=\"navbar__dropdown-voted\">\r\n                      VOTED<span></span>\r\n                    </span>\r\n                  )}\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </>\r\n        ))}\r\n        <div id=\"blur-div\">\r\n\r\n        </div>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","D:\\IFTA\\src\\components\\MovieGrid\\MovieGrid.js",["97","98","99","100","101","102","103"],"import React from \"react\";\r\nimport \"./MovieGrid.css\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { Dialog } from \"@material-ui/core\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\nimport ExpiredGrid from \"./ExpiredGrid/ExpiredGrid\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\r\nimport $ from 'jquery'\r\nconst MovieGrid = ({ award }) => {\r\n  const [{ userIdentification, sessionExpired }, dispatch] = useStateValue();\r\n\r\n  // OPEN OF MADALS\r\n  const [open, setOpen] = useState(false);\r\n  const [openConfirm, setOpenConfirm] = useState(false);\r\n  const [openWeblink, setOpenWeblink] = useState(false);\r\n  \r\n  // DATA STORING\r\n  const [movies, setMovies] = useState({});\r\n  const [modalData, setModalData] = useState({});\r\n  const [sesExpired, setSesExpired] = useState(null);\r\n  const [carouselData, setCarouselData] = useState([]);\r\n  const match = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (sessionExpired) {\r\n      axios\r\n        .get(`http://13.235.90.125:8000/award/results?id=${award}`)\r\n        .then((res) => setSesExpired(res.data.payload));\r\n    } else {\r\n      fetchNominees(userIdentification);\r\n    }\r\n\r\n    axios\r\n      .get(\r\n        \"http://13.235.90.125:8000/show/fetchCategories?showId=5ff351bcd2d84274b06e2783\"\r\n      )\r\n      .then((res) => fetchCarouselCategories(res.data.payload));\r\n  }, [award]);\r\n\r\n  const fetchNominees = (userIdentification) => {\r\n    if (userIdentification) {\r\n      const authToken = sessionStorage.getItem(\"authToken\").split(\" \")[1];\r\n      axios\r\n        .get(`http://13.235.90.125:8000/award/logedIn?id=${award}`, {\r\n          headers: { Authorization: `Bearer ${authToken}` },\r\n        })\r\n        .then((res) => {\r\n          if (res.data.payload[0].votedNomination) {\r\n            let nominations = res.data.payload[0].nominations;\r\n            nominations.unshift(res.data.payload[0].votedNomination);\r\n            setMovies({\r\n              nominations: nominations,\r\n              heading: res.data.payload[0].heading,\r\n              voteCount: res.data.payload[0].voteCount,\r\n              votedOnce: true,\r\n            });\r\n          } else {\r\n            setMovies({\r\n              nominations: res.data.payload[0].nominations,\r\n              heading: res.data.payload[0].heading,\r\n              voteCount: res.data.payload[0].voteCount,\r\n              votedOnce: false,\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => alert(err));\r\n    } else {\r\n      axios\r\n        .get(`http://13.235.90.125:8000/award?id=${award}`)\r\n        .then((res) => {\r\n          setMovies(res.data.payload[0]);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  const fetchCarouselCategories = (arr) => {\r\n    let carouselArray = [];\r\n    arr.forEach((item) => {\r\n      item.awards.forEach((awd) => {\r\n        if (awd._id === award) {\r\n          item.awards.forEach((carousel) => carouselArray.push(carousel._id));\r\n        }\r\n      });\r\n    });\r\n    setCarouselData(carouselArray);\r\n  };\r\n  // SETS the CURRENT POSITION IN AN ARRAY\r\n  if (carouselData) {\r\n    sessionStorage.setItem(\r\n      \"currentCarouselPosition\",\r\n      carouselData.indexOf(award)\r\n    );\r\n  }\r\n\r\n  // PREV BUTTON\r\n  let current = parseInt(sessionStorage.getItem(\"currentCarouselPosition\"));\r\n  const handlePrevious = () => {\r\n    const length = carouselData.length;\r\n    current--;\r\n    if (current < 0) {\r\n      current = length - 1;\r\n    }\r\n    history.replace(`/vote/${carouselData[current]}`);\r\n  };\r\n\r\n  // NEXT BUTTON\r\n  const handleNext = () => {\r\n    const length = carouselData.length;\r\n    current++;\r\n    if (current > length - 1) {\r\n      current = 0;\r\n    }\r\n    history.replace(`/vote/${carouselData[current]}`);\r\n  };\r\n\r\n  const handleVote = (key) => {\r\n    if (userIdentification) {\r\n      const authToken = sessionStorage.getItem(\"authToken\").split(\" \")[1];\r\n      const config = {\r\n        headers: { Authorization: `Bearer ${authToken}` },\r\n      };\r\n\r\n      const bodyParameters = {\r\n        award: match.params.award,\r\n        answer: key,\r\n      };\r\n\r\n      axios\r\n        .post(\r\n          \"http://13.235.90.125:8000/award/add-answer\",\r\n          bodyParameters,\r\n          config\r\n        )\r\n        .then((res) => {\r\n          setOpen(false);\r\n          setTimeout(() => setOpenConfirm(true), 500);\r\n          fetchNominees(userIdentification);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    } else {\r\n      setOpen(false);\r\n      setTimeout(() => {\r\n        setModalData({\r\n          name: \"Need to Login before voting\",\r\n        });\r\n        setOpenConfirm(true);\r\n      }, 100);\r\n    }\r\n  };\r\n\r\n  return !sessionExpired ? (\r\n    <div className=\"movieGrid\">\r\n      <div className=\"movieGrid__carousel\">\r\n        <NavigateBeforeIcon onClick={handlePrevious} />\r\n        <h1>{movies.heading}</h1>\r\n        <NavigateNextIcon onClick={handleNext} />\r\n      </div>\r\n\r\n      <p className=\"movieGrid__votes\">\r\n        Number of people Voted: <span>{movies.voteCount || \"0\"}</span>\r\n      </p>\r\n\r\n      <Link to=\"/voting\">Main Categories</Link>\r\n\r\n      <div className=\"movieGrid__container\">\r\n        {movies.nominations?.map((movie, index) => (\r\n          <div\r\n            className={`movieGrid__movies ${\r\n              movies?.votedOnce && \"movieGrid__votedOnce\"\r\n            }`}\r\n          >\r\n            <img src={movie?.image} style={{cursor:'pointer'}} onClick={()=>{setModalData({name:movie.name,weblink:movie.weblink});setOpenWeblink(true)}} alt=\"img\" />\r\n            <div>\r\n              <h2>{movie.name}</h2>\r\n              <button\r\n                disabled={movies?.votedOnce}\r\n                className={`movieGrid__moviesBtn ${\r\n                  movies?.votedOnce && `movieGrid__moviesBtn${index}`\r\n                }`}\r\n                onClick={() => {\r\n                  if(userIdentification){\r\n                    setModalData({\r\n                      name: movie.name,\r\n                      key: movie.key,\r\n                    });\r\n                    setOpen(true);\r\n                  }else{\r\n                    $(\"#popup1\").css({ visibility: \"visible\", opacity: \"1\" });\r\n                  }\r\n\r\n                }}\r\n              >\r\n                {movies?.votedOnce && index == 0\r\n                  ? \"Voted\"\r\n                  : !movies?.votedOnce\r\n                  ? \"Vote\"\r\n                  : \"Closed\"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n        <Dialog\r\n          open={open}\r\n          onClose={() => {\r\n            setModalData({});\r\n            setOpen(false);\r\n          }}\r\n        >\r\n          <div className=\"movieGrid__modal\">\r\n            <h1>{modalData.name}</h1>\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  setTimeout(() => setModalData({}), 500);\r\n                  setOpen(false);\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button onClick={() => handleVote(modalData.key)}>Submit</button>\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n      </div>\r\n      <Dialog open={openConfirm}>\r\n        <div className=\"movieGrid__modal movieGrid__modalSecond\">\r\n          <h1>\r\n            {userIdentification && \"You have voted to: \"}\r\n            <span>{modalData.name}</span>\r\n          </h1>\r\n          <button\r\n            onClick={() => {\r\n              setModalData({});\r\n              setOpenConfirm(false);\r\n            }}\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      </Dialog>\r\n      <Dialog open={openWeblink}>\r\n        <div className=\"movieGrid__modal movieGrid__modalSecond\">\r\n          <h1 style={{cursor:'pointer'}}>\r\n            <a href={modalData.weblink} target=\"_blank\">{modalData.weblink}</a>\r\n          </h1>\r\n          <button\r\n            onClick={() => {\r\n              setModalData({});\r\n              setOpenWeblink(false);\r\n            }}\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      </Dialog>\r\n      \r\n    </div>\r\n  ) : (\r\n    <ExpiredGrid\r\n      sesExpired={sesExpired}\r\n      handlePrevious={handlePrevious}\r\n      handleNext={handleNext}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MovieGrid;\r\n","D:\\IFTA\\src\\components\\MovieGrid\\ExpiredGrid\\ExpiredGrid.js",[],"D:\\IFTA\\src\\Particle.js",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":2,"column":27,"nodeType":"110","messageId":"111","endLine":2,"endColumn":33},{"ruleId":"112","severity":1,"message":"113","line":16,"column":10,"nodeType":"114","messageId":"115","endLine":16,"endColumn":12},{"ruleId":"116","severity":1,"message":"117","line":21,"column":6,"nodeType":"118","endLine":21,"endColumn":8,"suggestions":"119"},{"ruleId":"116","severity":1,"message":"120","line":26,"column":19,"nodeType":"121","endLine":26,"endColumn":23},{"ruleId":"116","severity":1,"message":"122","line":35,"column":19,"nodeType":"121","endLine":35,"endColumn":23},{"ruleId":"108","severity":1,"message":"123","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":28},{"ruleId":"108","severity":1,"message":"124","line":4,"column":8,"nodeType":"110","messageId":"111","endLine":4,"endColumn":13},{"ruleId":"108","severity":1,"message":"125","line":6,"column":8,"nodeType":"110","messageId":"111","endLine":6,"endColumn":14},{"ruleId":"116","severity":1,"message":"126","line":28,"column":6,"nodeType":"118","endLine":28,"endColumn":26,"suggestions":"127"},{"ruleId":"108","severity":1,"message":"125","line":2,"column":8,"nodeType":"110","messageId":"111","endLine":2,"endColumn":14},{"ruleId":"108","severity":1,"message":"124","line":4,"column":8,"nodeType":"110","messageId":"111","endLine":4,"endColumn":13},{"ruleId":"108","severity":1,"message":"128","line":15,"column":26,"nodeType":"110","messageId":"111","endLine":15,"endColumn":34},{"ruleId":"108","severity":1,"message":"129","line":7,"column":22,"nodeType":"110","messageId":"111","endLine":7,"endColumn":23},{"ruleId":"130","severity":1,"message":"131","line":33,"column":13,"nodeType":"132","endLine":33,"endColumn":107},{"ruleId":"108","severity":1,"message":"123","line":1,"column":38,"nodeType":"110","messageId":"111","endLine":1,"endColumn":49},{"ruleId":"108","severity":1,"message":"128","line":9,"column":34,"nodeType":"110","messageId":"111","endLine":9,"endColumn":42},{"ruleId":"116","severity":1,"message":"133","line":54,"column":6,"nodeType":"118","endLine":54,"endColumn":26,"suggestions":"134"},{"ruleId":"135","severity":1,"message":"136","line":75,"column":17,"nodeType":"137","messageId":"115","endLine":75,"endColumn":19},{"ruleId":"108","severity":1,"message":"138","line":10,"column":8,"nodeType":"110","messageId":"111","endLine":10,"endColumn":24},{"ruleId":"108","severity":1,"message":"139","line":11,"column":8,"nodeType":"110","messageId":"111","endLine":11,"endColumn":26},{"ruleId":"108","severity":1,"message":"128","line":14,"column":50,"nodeType":"110","messageId":"111","endLine":14,"endColumn":58},{"ruleId":"116","severity":1,"message":"140","line":43,"column":6,"nodeType":"118","endLine":43,"endColumn":13,"suggestions":"141"},{"ruleId":"135","severity":1,"message":"136","line":185,"column":52,"nodeType":"137","messageId":"115","endLine":185,"endColumn":54},{"ruleId":"135","severity":1,"message":"136","line":224,"column":47,"nodeType":"137","messageId":"115","endLine":224,"endColumn":49},{"ruleId":"142","severity":1,"message":"143","line":275,"column":43,"nodeType":"144","endLine":275,"endColumn":58},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkIfExpired' and 'getAwards'. Either include them or remove the dependency array.","ArrayExpression",["147"],"Assignments to the 'loaded1' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","Assignments to the 'loaded2' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'useCallback' is defined but never used.","'logo2' is defined but never used.","'Navbar' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["148"],"'dispatch' is assigned a value but never used.","'_' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'handleNav', 'location.pathname', 'location.state', 'match.params', and 'match.path'. Either include them or remove the dependency array.",["149"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'NavigateNextIcon' is defined but never used.","'NavigateBeforeIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchCarouselCategories', 'fetchNominees', 'sessionExpired', and 'userIdentification'. Either include them or remove the dependency array.",["150"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},"Update the dependencies array to be: [checkIfExpired, getAwards]",{"range":"159","text":"160"},"Update the dependencies array to be: [dispatch, userIdentification]",{"range":"161","text":"162"},"Update the dependencies array to be: [handleNav, location.pathname, location.state, match.params, match.path, userIdentification]",{"range":"163","text":"164"},"Update the dependencies array to be: [award, fetchCarouselCategories, fetchNominees, sessionExpired, userIdentification]",{"range":"165","text":"166"},[700,702],"[checkIfExpired, getAwards]",[973,993],"[dispatch, userIdentification]",[1841,1861],"[handleNav, location.pathname, location.state, match.params, match.path, userIdentification]",[1630,1637],"[award, fetchCarouselCategories, fetchNominees, sessionExpired, userIdentification]"]