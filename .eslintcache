[{"D:\\IFTA\\src\\index.js":"1","D:\\IFTA\\src\\App.js":"2","D:\\IFTA\\src\\reportWebVitals.js":"3","D:\\IFTA\\src\\StateProvider.js":"4","D:\\IFTA\\src\\Reducer.js":"5","D:\\IFTA\\src\\components\\Home\\Home.js":"6","D:\\IFTA\\src\\components\\Voting\\Voting.js":"7","D:\\IFTA\\src\\components\\Vote\\Vote.js":"8","D:\\IFTA\\src\\components\\Home\\YTVideo\\YTVideo.js":"9","D:\\IFTA\\src\\components\\Footer\\Footer.js":"10","D:\\IFTA\\src\\components\\Home\\Category\\Category.js":"11","D:\\IFTA\\src\\components\\Home\\GridImages\\GridImages.js":"12","D:\\IFTA\\src\\components\\LoginModal\\LoginModal.js":"13","D:\\IFTA\\src\\components\\Navbar\\Navbar.js":"14","D:\\IFTA\\src\\components\\MovieGrid\\MovieGrid.js":"15","D:\\IFTA\\src\\components\\MovieGrid\\ExpiredGrid\\ExpiredGrid.js":"16"},{"size":710,"mtime":1611512976266,"results":"17","hashOfConfig":"18"},{"size":1513,"mtime":1611512976218,"results":"19","hashOfConfig":"18"},{"size":375,"mtime":1611512976266,"results":"20","hashOfConfig":"18"},{"size":375,"mtime":1611512976218,"results":"21","hashOfConfig":"18"},{"size":1093,"mtime":1611659584540,"results":"22","hashOfConfig":"18"},{"size":2723,"mtime":1611834467686,"results":"23","hashOfConfig":"18"},{"size":1885,"mtime":1611833032732,"results":"24","hashOfConfig":"18"},{"size":1648,"mtime":1611834394604,"results":"25","hashOfConfig":"18"},{"size":249,"mtime":1611512976226,"results":"26","hashOfConfig":"18"},{"size":610,"mtime":1611512976222,"results":"27","hashOfConfig":"18"},{"size":1230,"mtime":1611512976222,"results":"28","hashOfConfig":"18"},{"size":2484,"mtime":1611652926483,"results":"29","hashOfConfig":"18"},{"size":3579,"mtime":1611659002381,"results":"30","hashOfConfig":"18"},{"size":5855,"mtime":1611678473809,"results":"31","hashOfConfig":"18"},{"size":8429,"mtime":1611672728937,"results":"32","hashOfConfig":"18"},{"size":2253,"mtime":1611579176594,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"wsqtge",{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"D:\\IFTA\\src\\index.js",[],["71","72"],"D:\\IFTA\\src\\App.js",["73","74"],"import \"./App.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./components/Home/Home\";\r\nimport Voting from \"./components/Voting/Voting\";\r\nimport Bollywood from \"./components/Vote/Vote\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { actionTypes } from \"./Reducer\";\r\n\r\nfunction App() {\r\n  const [{}, dispatch] = useStateValue();\r\n\r\n  useEffect(() => {\r\n    getAwards();\r\n    checkIfExpired();\r\n  }, []);\r\n\r\n  const checkIfExpired = () => {\r\n    axios\r\n      .get(\"http://13.235.90.125:8000/show/?showId=5ff351bcd2d84274b06e2783\")\r\n      .then((res) => {\r\n        dispatch({\r\n          type: actionTypes.SET_EXPIREDandTOTALVOTE,\r\n          expired: res.data.payload.isExpired,\r\n          totalVotes: res.data.payload.voteCount,\r\n        });\r\n      });\r\n  };\r\n\r\n  const getAwards = () => {\r\n    axios\r\n      .get(\r\n        \"http://13.235.90.125:8000/show/fetchCategories?showId=5ff351bcd2d84274b06e2783\"\r\n      )\r\n      .then((res) => {\r\n        dispatch({\r\n          type: actionTypes.SET_AWARDS,\r\n          awards: res.data.payload,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"app\">\r\n        <Switch>\r\n          <Route path=\"/voting\" component={Voting} />\r\n          <Route path=\"/vote/:award\" component={Bollywood} />\r\n          <Route path=\"/\" component={Home} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\IFTA\\src\\reportWebVitals.js",[],"D:\\IFTA\\src\\StateProvider.js",[],"D:\\IFTA\\src\\Reducer.js",[],"D:\\IFTA\\src\\components\\Home\\Home.js",["75","76"],"D:\\IFTA\\src\\components\\Voting\\Voting.js",["77","78"],"D:\\IFTA\\src\\components\\Vote\\Vote.js",["79"],"D:\\IFTA\\src\\components\\Home\\YTVideo\\YTVideo.js",[],"D:\\IFTA\\src\\components\\Footer\\Footer.js",[],"D:\\IFTA\\src\\components\\Home\\Category\\Category.js",["80"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Category.css\";\r\nimport { useStateValue } from \"../../../StateProvider\";\r\n\r\nconst Category = ({ show }) => {\r\n  const [{ awards }, _] = useStateValue();\r\n\r\n  const ConditionalLink = ({ children, to, condition, secTo }) =>\r\n    condition && to ? (\r\n      <Link to={to}>{children}</Link>\r\n    ) : (\r\n      <Link to={secTo}>{children}</Link>\r\n    );\r\n\r\n  return (\r\n    <div className=\"category\">\r\n      {awards?.map((award, index) => (\r\n        <ConditionalLink\r\n          to={{\r\n            pathname: \"/voting\",\r\n            state: {\r\n              navId: award._id,\r\n            },\r\n          }}\r\n          condition={show}\r\n          key={award._id}\r\n          secTo={`/vote/${award.awards[0]._id}`}\r\n        >\r\n          <div className={`category-${index + 1}`}>\r\n            <h3>{award.title}</h3>\r\n            {show && (\r\n              <div>\r\n                {award.awards.map((a) => (\r\n                  <p key={a._id}>{a.heading}</p>\r\n                ))}\r\n              </div>\r\n            )}\r\n            {show && <button>Vote</button>}\r\n          </div>\r\n        </ConditionalLink>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","D:\\IFTA\\src\\components\\Home\\GridImages\\GridImages.js",[],"D:\\IFTA\\src\\components\\LoginModal\\LoginModal.js",[],"D:\\IFTA\\src\\components\\Navbar\\Navbar.js",["81","82","83","84"],"import React, { useState, useEffect ,useCallback} from \"react\";\r\nimport \"./Navbar.css\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Link, useLocation, useRouteMatch , useHistory} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\n\r\nconst Navbar = () => {\r\n  const [{ userIdentification }, dispatch] = useStateValue();\r\n  const [navTitle, setNavTitle] = useState([]);\r\n\r\n  const location = useLocation();\r\n  const match = useRouteMatch();\r\n  const history = useHistory();\r\n  // setTimeout(() => {\r\n  //   window.addEventListener(\"scroll\", function () {\r\n  //     let header = document.querySelector(\"#navbar\");\r\n  //     header.classList.toggle(\"sticky\", window.scrollY > 100);\r\n  //   });\r\n  // }, 500);\r\n\r\n  useEffect(() => {\r\n    if (userIdentification) {\r\n      const authToken = sessionStorage.getItem(\"authToken\").split(\" \")[1];\r\n      axios\r\n        .get(\r\n          \"http://13.235.90.125:8000/show/fetchCategories/logedIn?showId=5ff351bcd2d84274b06e2783\",\r\n          {\r\n            headers: { Authorization: `Bearer ${authToken}` },\r\n          }\r\n        )\r\n        .then((res) => setNavTitle(res.data.payload))\r\n        .catch((err) => alert(err));\r\n    } else {\r\n      axios\r\n        .get(\r\n          \"http://13.235.90.125:8000/show/fetchCategories?showId=5ff351bcd2d84274b06e2783\"\r\n        )\r\n        .then((res) => setNavTitle(res.data.payload));\r\n    }\r\n\r\n    if (location.pathname === \"/voting\" && location.state !== undefined) {\r\n      // Getting the navId passed from category\r\n      const { navId } = location.state;\r\n      setTimeout(() => {\r\n        handleNav(navId);\r\n      }, 700);\r\n    }\r\n\r\n    if (match.path === \"/vote/:award\") {\r\n      const { award } = match.params;\r\n      setTimeout(() => handleVoteNav(award), 400);\r\n    }\r\n  }, [userIdentification]);\r\n  let closeId = '';\r\n  const handleNav = (id) => {\r\n    const dropdown = document.getElementById(id);\r\n    const allDropdown = document.getElementsByClassName(\"navbar__dropdown\");\r\n    const allNavItems = document.getElementsByClassName(\"nav__items\");\r\n    const blurdiv = document.getElementById('blur-div');\r\n    if (match.path === \"/vote/:award\") {\r\n      handleVoteNav(null, dropdown);\r\n    }\r\n    \r\n    if (\r\n      dropdown?.classList.contains(\"navbar__dropdownShow\") &&\r\n      dropdown !== null\r\n    ) {\r\n      // dropdown.classList.remove(\"navbar__dropdownShow\");\r\n      // // Removing Active Class\r\n      // dropdown?.previousSibling.classList.remove(\"nav-active\");\r\n\r\n      blurdiv.style.display = \"none\";\r\n    } else {\r\n      if(closeId==id) return;\r\n      Array.from(allDropdown).forEach(function (el) {\r\n        el.classList.remove(\"navbar__dropdownShow\");\r\n      });\r\n      dropdown?.classList.add(\"navbar__dropdownShow\");\r\n      // Adding Active Class\r\n      Array.from(allNavItems).forEach(function (el) {\r\n        el.classList.remove(\"nav-active\");\r\n      });\r\n      dropdown.focus()\r\n      blurdiv.style.display=\"block\";\r\n      dropdown?.previousSibling.classList.add(\"nav-active\");\r\n    }\r\n  };\r\n  const closeNav = (id)=>{\r\n    const dropdown = document.getElementById(id);\r\n    const blurdiv = document.getElementById('blur-div');\r\n    closeId = id;\r\n    setTimeout(()=>{\r\n      if (\r\n        dropdown?.classList.contains(\"navbar__dropdownShow\") &&\r\n        dropdown !== null\r\n      ) {\r\n        dropdown.classList.remove(\"navbar__dropdownShow\");\r\n        // Removing Active Class\r\n        dropdown?.previousSibling.classList.remove(\"nav-active\");\r\n        blurdiv.style.display = \"none\";\r\n      }\r\n    },0);\r\n    setTimeout(()=>{\r\n      closeId='';\r\n    },200)\r\n \r\n  }\r\n  const handleVoteNav = (id, dropdownId) => {\r\n    if (id === null) {\r\n      console.log(true);\r\n      const prev = dropdownId.previousSibling;\r\n      const allNavItems = document.getElementsByClassName(\"nav__items\");\r\n      Array.from(allNavItems).forEach(function (el) {\r\n        el.classList.remove(\"nav-active-vote\");\r\n      });\r\n      prev.classList.add(\"nav-active-vote\");\r\n    } else {\r\n      const prev = document.getElementById(id).parentElement.previousSibling;\r\n      const allNavItems = document.getElementsByClassName(\"nav__items\");\r\n      Array.from(allNavItems).forEach(function (el) {\r\n        el.classList.remove(\"nav-active-vote\");\r\n      });\r\n      prev.classList.add(\"nav-active-vote\");\r\n    }\r\n  };\r\n  const goToVote = (id)=>{history.push(`/vote/${id}`)}\r\n  return (\r\n    <nav className=\"navbar\" id=\"navbar\">\r\n      <ul className=\"navbar__nav\">\r\n        {navTitle.map((nav,i) => (\r\n          <>\r\n            <li\r\n              className=\"nav__items\"\r\n              key={nav._id}\r\n              onClick={() => handleNav(nav._id)}\r\n            >\r\n              {nav.title} <ExpandMoreIcon />\r\n            </li>\r\n\r\n            <div tabIndex={0} className=\"navbar__dropdown\"  onBlur={(e)=>closeNav(nav._id)} id={nav._id}>\r\n              {nav.awards?.map((award) => (\r\n                <Link\r\n                  id={award._id}\r\n                  onFocus={()=>goToVote(award._id)}\r\n                  key={award._id}\r\n                  to={`/vote/${award._id}`}\r\n                  style={{\r\n                    background: `${\r\n                      award.answer.length > 0\r\n                        ? \"linear-gradient(to right, #233329, #63D471)\"\r\n                        : \"#000\"\r\n                    }`,\r\n                  }}\r\n                >\r\n                  {award.heading}\r\n                  {award.answer.length > 0 && (\r\n                    <span className=\"navbar__dropdown-voted\">\r\n                      VOTED<span></span>\r\n                    </span>\r\n                  )}\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </>\r\n        ))}\r\n        <div id=\"blur-div\">\r\n\r\n        </div>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","D:\\IFTA\\src\\components\\MovieGrid\\MovieGrid.js",["85","86","87","88"],"import React from \"react\";\r\nimport \"./MovieGrid.css\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { Dialog } from \"@material-ui/core\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\nimport ExpiredGrid from \"./ExpiredGrid/ExpiredGrid\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\r\nimport $ from 'jquery'\r\nconst MovieGrid = ({ award }) => {\r\n  const [{ userIdentification, sessionExpired }, dispatch] = useStateValue();\r\n\r\n  // OPEN OF MADALS\r\n  const [open, setOpen] = useState(false);\r\n  const [openConfirm, setOpenConfirm] = useState(false);\r\n  const [openWeblink, setOpenWeblink] = useState(false);\r\n  \r\n  // DATA STORING\r\n  const [movies, setMovies] = useState({});\r\n  const [modalData, setModalData] = useState({});\r\n  const [sesExpired, setSesExpired] = useState(null);\r\n  const [carouselData, setCarouselData] = useState([]);\r\n  const match = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (sessionExpired) {\r\n      axios\r\n        .get(`http://13.235.90.125:8000/award/results?id=${award}`)\r\n        .then((res) => setSesExpired(res.data.payload));\r\n    } else {\r\n      fetchNominees(userIdentification);\r\n    }\r\n\r\n    axios\r\n      .get(\r\n        \"http://13.235.90.125:8000/show/fetchCategories?showId=5ff351bcd2d84274b06e2783\"\r\n      )\r\n      .then((res) => fetchCarouselCategories(res.data.payload));\r\n  }, [award]);\r\n\r\n  const fetchNominees = (userIdentification) => {\r\n    if (userIdentification) {\r\n      const authToken = sessionStorage.getItem(\"authToken\").split(\" \")[1];\r\n      axios\r\n        .get(`http://13.235.90.125:8000/award/logedIn?id=${award}`, {\r\n          headers: { Authorization: `Bearer ${authToken}` },\r\n        })\r\n        .then((res) => {\r\n          if (res.data.payload[0].votedNomination) {\r\n            let nominations = res.data.payload[0].nominations;\r\n            nominations.unshift(res.data.payload[0].votedNomination);\r\n            setMovies({\r\n              nominations: nominations,\r\n              heading: res.data.payload[0].heading,\r\n              voteCount: res.data.payload[0].voteCount,\r\n              votedOnce: true,\r\n            });\r\n          } else {\r\n            setMovies({\r\n              nominations: res.data.payload[0].nominations,\r\n              heading: res.data.payload[0].heading,\r\n              voteCount: res.data.payload[0].voteCount,\r\n              votedOnce: false,\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => alert(err));\r\n    } else {\r\n      axios\r\n        .get(`http://13.235.90.125:8000/award?id=${award}`)\r\n        .then((res) => {\r\n          setMovies(res.data.payload[0]);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  const fetchCarouselCategories = (arr) => {\r\n    let carouselArray = [];\r\n    arr.forEach((item) => {\r\n      item.awards.forEach((awd) => {\r\n        if (awd._id === award) {\r\n          item.awards.forEach((carousel) => carouselArray.push(carousel._id));\r\n        }\r\n      });\r\n    });\r\n    setCarouselData(carouselArray);\r\n  };\r\n  // SETS the CURRENT POSITION IN AN ARRAY\r\n  if (carouselData) {\r\n    sessionStorage.setItem(\r\n      \"currentCarouselPosition\",\r\n      carouselData.indexOf(award)\r\n    );\r\n  }\r\n\r\n  // PREV BUTTON\r\n  let current = parseInt(sessionStorage.getItem(\"currentCarouselPosition\"));\r\n  const handlePrevious = () => {\r\n    const length = carouselData.length;\r\n    current--;\r\n    if (current < 0) {\r\n      current = length - 1;\r\n    }\r\n    history.replace(`/vote/${carouselData[current]}`);\r\n  };\r\n\r\n  // NEXT BUTTON\r\n  const handleNext = () => {\r\n    const length = carouselData.length;\r\n    current++;\r\n    if (current > length - 1) {\r\n      current = 0;\r\n    }\r\n    history.replace(`/vote/${carouselData[current]}`);\r\n  };\r\n\r\n  const handleVote = (key) => {\r\n    if (userIdentification) {\r\n      const authToken = sessionStorage.getItem(\"authToken\").split(\" \")[1];\r\n      const config = {\r\n        headers: { Authorization: `Bearer ${authToken}` },\r\n      };\r\n\r\n      const bodyParameters = {\r\n        award: match.params.award,\r\n        answer: key,\r\n      };\r\n\r\n      axios\r\n        .post(\r\n          \"http://13.235.90.125:8000/award/add-answer\",\r\n          bodyParameters,\r\n          config\r\n        )\r\n        .then((res) => {\r\n          setOpen(false);\r\n          setTimeout(() => setOpenConfirm(true), 500);\r\n          fetchNominees(userIdentification);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    } else {\r\n      setOpen(false);\r\n      setTimeout(() => {\r\n        setModalData({\r\n          name: \"Need to Login before voting\",\r\n        });\r\n        setOpenConfirm(true);\r\n      }, 100);\r\n    }\r\n  };\r\n\r\n  return !sessionExpired ? (\r\n    <div className=\"movieGrid\">\r\n      <div className=\"movieGrid__carousel\">\r\n        <NavigateBeforeIcon onClick={handlePrevious} />\r\n        <h1>{movies.heading}</h1>\r\n        <NavigateNextIcon onClick={handleNext} />\r\n      </div>\r\n\r\n      <p className=\"movieGrid__votes\">\r\n        Number of people Voted: <span>{movies.voteCount || \"0\"}</span>\r\n      </p>\r\n\r\n      <Link to=\"/voting\">Main Categories</Link>\r\n\r\n      <div className=\"movieGrid__container\">\r\n        {movies.nominations?.map((movie, index) => (\r\n          <div\r\n            className={`movieGrid__movies ${\r\n              movies?.votedOnce && \"movieGrid__votedOnce\"\r\n            }`}\r\n          >\r\n            <img src={movie?.image} style={{cursor:'pointer'}} onClick={()=>{setModalData({name:movie.name,weblink:movie.weblink});setOpenWeblink(true)}} alt=\"img\" />\r\n            <div>\r\n              <h2>{movie.name}</h2>\r\n              <button\r\n                disabled={movies?.votedOnce}\r\n                className={`movieGrid__moviesBtn ${\r\n                  movies?.votedOnce && `movieGrid__moviesBtn${index}`\r\n                }`}\r\n                onClick={() => {\r\n                  if(userIdentification){\r\n                    setModalData({\r\n                      name: movie.name,\r\n                      key: movie.key,\r\n                    });\r\n                    setOpen(true);\r\n                  }else{\r\n                    $(\"#popup1\").css({ visibility: \"visible\", opacity: \"1\" });\r\n                  }\r\n\r\n                }}\r\n              >\r\n                {movies?.votedOnce && index == 0\r\n                  ? \"Voted\"\r\n                  : !movies?.votedOnce\r\n                  ? \"Vote\"\r\n                  : \"Closed\"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n        <Dialog\r\n          open={open}\r\n          onClose={() => {\r\n            setModalData({});\r\n            setOpen(false);\r\n          }}\r\n        >\r\n          <div className=\"movieGrid__modal\">\r\n            <h1>{modalData.name}</h1>\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  setTimeout(() => setModalData({}), 500);\r\n                  setOpen(false);\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button onClick={() => handleVote(modalData.key)}>Submit</button>\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n      </div>\r\n      <Dialog open={openConfirm}>\r\n        <div className=\"movieGrid__modal movieGrid__modalSecond\">\r\n          <h1>\r\n            {userIdentification && \"You have voted to: \"}\r\n            <span>{modalData.name}</span>\r\n          </h1>\r\n          <button\r\n            onClick={() => {\r\n              setModalData({});\r\n              setOpenConfirm(false);\r\n            }}\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      </Dialog>\r\n      <Dialog open={openWeblink}>\r\n        <div className=\"movieGrid__modal movieGrid__modalSecond\">\r\n          <h1 style={{cursor:'pointer'}}>\r\n            <a href={modalData.weblink} target=\"_blank\">{modalData.weblink}</a>\r\n          </h1>\r\n          <button\r\n            onClick={() => {\r\n              setModalData({});\r\n              setOpenWeblink(false);\r\n            }}\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      </Dialog>\r\n      \r\n    </div>\r\n  ) : (\r\n    <ExpiredGrid\r\n      sesExpired={sesExpired}\r\n      handlePrevious={handlePrevious}\r\n      handleNext={handleNext}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MovieGrid;\r\n","D:\\IFTA\\src\\components\\MovieGrid\\ExpiredGrid\\ExpiredGrid.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":12,"column":10,"nodeType":"95","messageId":"96","endLine":12,"endColumn":12},{"ruleId":"97","severity":1,"message":"98","line":17,"column":6,"nodeType":"99","endLine":17,"endColumn":8,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":26},{"ruleId":"101","severity":1,"message":"105","line":3,"column":8,"nodeType":"103","messageId":"104","endLine":3,"endColumn":12},{"ruleId":"101","severity":1,"message":"106","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":28},{"ruleId":"97","severity":1,"message":"107","line":28,"column":6,"nodeType":"99","endLine":28,"endColumn":26,"suggestions":"108"},{"ruleId":"101","severity":1,"message":"109","line":14,"column":26,"nodeType":"103","messageId":"104","endLine":14,"endColumn":34},{"ruleId":"101","severity":1,"message":"110","line":7,"column":22,"nodeType":"103","messageId":"104","endLine":7,"endColumn":23},{"ruleId":"101","severity":1,"message":"106","line":1,"column":38,"nodeType":"103","messageId":"104","endLine":1,"endColumn":49},{"ruleId":"101","severity":1,"message":"109","line":9,"column":34,"nodeType":"103","messageId":"104","endLine":9,"endColumn":42},{"ruleId":"97","severity":1,"message":"111","line":54,"column":6,"nodeType":"99","endLine":54,"endColumn":26,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":75,"column":17,"nodeType":"115","messageId":"96","endLine":75,"endColumn":19},{"ruleId":"101","severity":1,"message":"109","line":14,"column":50,"nodeType":"103","messageId":"104","endLine":14,"endColumn":58},{"ruleId":"97","severity":1,"message":"116","line":43,"column":6,"nodeType":"99","endLine":43,"endColumn":13,"suggestions":"117"},{"ruleId":"113","severity":1,"message":"114","line":199,"column":45,"nodeType":"115","messageId":"96","endLine":199,"endColumn":47},{"ruleId":"118","severity":1,"message":"119","line":250,"column":41,"nodeType":"120","endLine":250,"endColumn":56},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkIfExpired' and 'getAwards'. Either include them or remove the dependency array.","ArrayExpression",["123"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'iifa' is defined but never used.","'useCallback' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["124"],"'dispatch' is assigned a value but never used.","'_' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleNav', 'location.pathname', 'location.state', 'match.params', and 'match.path'. Either include them or remove the dependency array.",["125"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","React Hook useEffect has missing dependencies: 'fetchCarouselCategories', 'fetchNominees', 'sessionExpired', and 'userIdentification'. Either include them or remove the dependency array.",["126"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"Update the dependencies array to be: [checkIfExpired, getAwards]",{"range":"135","text":"136"},"Update the dependencies array to be: [dispatch, userIdentification]",{"range":"137","text":"138"},"Update the dependencies array to be: [handleNav, location.pathname, location.state, match.params, match.path, userIdentification]",{"range":"139","text":"140"},"Update the dependencies array to be: [award, fetchCarouselCategories, fetchNominees, sessionExpired, userIdentification]",{"range":"141","text":"142"},[528,530],"[checkIfExpired, getAwards]",[973,993],"[dispatch, userIdentification]",[1841,1861],"[handleNav, location.pathname, location.state, match.params, match.path, userIdentification]",[1579,1586],"[award, fetchCarouselCategories, fetchNominees, sessionExpired, userIdentification]"]